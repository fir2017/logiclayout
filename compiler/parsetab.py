
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x92\x1d;\x87\xddd\xc0!(\xb1\xc0\x1c;0t\x91'
    
_lr_action_items = {'BIN':([0,2,3,8,10,15,16,17,18,21,22,23,],[1,1,1,1,1,1,1,1,1,1,1,1,]),'AND':([1,4,5,6,7,11,12,13,14,19,20,24,25,26,27,28,29,30,31,32,33,],[-13,-14,-15,-16,-17,21,21,-17,21,21,-3,-11,-10,-7,-9,21,-5,-12,-6,-8,-4,]),'LBRACE':([0,2,3,8,10,15,16,17,18,21,22,23,],[2,2,2,2,2,2,2,2,2,2,2,2,]),'FALSE':([0,2,3,8,10,15,16,17,18,21,22,23,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'RBRACE':([1,4,5,6,12,13,20,24,25,26,27,29,30,31,32,33,],[-13,-14,-15,-16,24,-17,-3,-11,-10,-7,-9,-5,-12,-6,-8,-4,]),'INT':([0,2,3,8,10,15,16,17,18,21,22,23,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'XOR':([1,4,5,6,7,11,12,13,14,19,20,24,25,26,27,28,29,30,31,32,33,],[-13,-14,-15,-16,-17,22,22,-17,22,22,-3,-11,-10,-7,-9,22,-5,-12,-6,-8,-4,]),'EQUALS':([7,],[17,]),'OR':([1,4,5,6,7,11,12,13,14,19,20,24,25,26,27,28,29,30,31,32,33,],[-13,-14,-15,-16,-17,23,23,-17,23,23,-3,-11,-10,-7,-9,23,-5,-12,-6,-8,-4,]),'LBRACKET':([0,2,3,8,10,15,16,17,18,21,22,23,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'LPAREN':([0,2,3,8,10,15,16,17,18,21,22,23,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'NOT':([0,2,3,8,10,15,16,17,18,21,22,23,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'RPAREN':([1,4,5,6,13,14,20,24,25,26,27,29,30,31,32,33,],[-13,-14,-15,-16,-17,25,-3,-11,-10,-7,-9,-5,-12,-6,-8,-4,]),'RBRACKET':([1,4,5,6,13,19,20,24,25,26,27,29,30,31,32,33,],[-13,-14,-15,-16,-17,30,-3,-11,-10,-7,-9,-5,-12,-6,-8,-4,]),'TRUE':([0,2,3,8,10,15,16,17,18,21,22,23,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'ID':([0,2,3,8,10,15,16,17,18,21,22,23,],[7,13,13,13,13,13,13,13,13,13,13,13,]),'$end':([1,4,5,6,7,9,11,13,20,24,25,26,27,28,29,30,31,32,33,],[-13,-14,-15,-16,-17,0,-2,-17,-3,-11,-10,-7,-9,-1,-5,-12,-6,-8,-4,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,3,8,10,15,16,17,18,21,22,23,],[11,12,14,19,20,26,27,28,29,31,32,33,]),'statement':([0,],[9,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID EQUALS expression','statement',3,'p_statement_assign','/Users/Inga/Projects/circuits/compiler/parser.py',29),
  ('statement -> expression','statement',1,'p_statement_expr','/Users/Inga/Projects/circuits/compiler/parser.py',41),
  ('expression -> NOT expression','expression',2,'p_expression_not','/Users/Inga/Projects/circuits/compiler/parser.py',45),
  ('expression -> expression OR expression','expression',3,'p_expression_or','/Users/Inga/Projects/circuits/compiler/parser.py',49),
  ('expression -> ID OR expression','expression',3,'p_expression_or','/Users/Inga/Projects/circuits/compiler/parser.py',50),
  ('expression -> expression AND expression','expression',3,'p_expression_and','/Users/Inga/Projects/circuits/compiler/parser.py',54),
  ('expression -> ID AND expression','expression',3,'p_expression_and','/Users/Inga/Projects/circuits/compiler/parser.py',55),
  ('expression -> expression XOR expression','expression',3,'p_expression_xor','/Users/Inga/Projects/circuits/compiler/parser.py',59),
  ('expression -> ID XOR expression','expression',3,'p_expression_xor','/Users/Inga/Projects/circuits/compiler/parser.py',60),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','/Users/Inga/Projects/circuits/compiler/parser.py',64),
  ('expression -> LBRACE expression RBRACE','expression',3,'p_expression_group','/Users/Inga/Projects/circuits/compiler/parser.py',65),
  ('expression -> LBRACKET expression RBRACKET','expression',3,'p_expression_group','/Users/Inga/Projects/circuits/compiler/parser.py',66),
  ('expression -> BIN','expression',1,'p_expression_literal','/Users/Inga/Projects/circuits/compiler/parser.py',70),
  ('expression -> INT','expression',1,'p_expression_literal','/Users/Inga/Projects/circuits/compiler/parser.py',71),
  ('expression -> TRUE','expression',1,'p_expression_literal','/Users/Inga/Projects/circuits/compiler/parser.py',72),
  ('expression -> FALSE','expression',1,'p_expression_literal','/Users/Inga/Projects/circuits/compiler/parser.py',73),
  ('expression -> ID','expression',1,'p_expression_id','/Users/Inga/Projects/circuits/compiler/parser.py',77),
]
