
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x147*7\x83\x1a\xff\xb66\x80\xc0\x82\xd1\xda\t\xa3'
    
_lr_action_items = {'AND':([1,2,6,8,9,10,14,15,16,17,18,],[-8,-9,11,-9,11,-6,11,-7,-4,-5,-3,]),'BINARY':([0,3,5,7,11,12,13,],[1,1,1,1,1,1,1,]),'RPAREN':([1,8,9,10,15,16,17,18,],[-8,-9,15,-6,-7,-4,-5,-3,]),'NAME':([0,3,5,7,11,12,13,],[2,8,8,8,8,8,8,]),'EQUALS':([2,],[7,]),'LPAREN':([0,3,5,7,11,12,13,],[3,3,3,3,3,3,3,]),'NOT':([0,3,5,7,11,12,13,],[5,5,5,5,5,5,5,]),'XOR':([1,2,6,8,9,10,14,15,16,17,18,],[-8,-9,12,-9,12,-6,12,-7,-4,-5,-3,]),'OR':([1,2,6,8,9,10,14,15,16,17,18,],[-8,-9,13,-9,13,-6,13,-7,-4,-5,-3,]),'$end':([1,2,4,6,8,10,14,15,16,17,18,],[-8,-9,0,-2,-9,-6,-1,-7,-4,-5,-3,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,5,7,11,12,13,],[6,9,10,14,16,17,18,]),'statement':([0,],[4,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','digital_logic.py',66),
  ('statement -> expression','statement',1,'p_statement_expr','digital_logic.py',70),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','digital_logic.py',74),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','digital_logic.py',75),
  ('expression -> expression XOR expression','expression',3,'p_expression_binop','digital_logic.py',76),
  ('expression -> NOT expression','expression',2,'p_expression_not','digital_logic.py',82),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','digital_logic.py',86),
  ('expression -> BINARY','expression',1,'p_expression_binary','digital_logic.py',90),
  ('expression -> NAME','expression',1,'p_expression_name','digital_logic.py',94),
]
